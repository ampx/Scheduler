# cache cleanup policy
# cacheTTLMins=60

# cache detail
# cacheJdbcConfig.driver=com.mysql.jdbc.Driver
# cacheJdbcConfig.url=jdbc:mysql://localhost:3306/databaseName?characterEncoding=latin1
# cacheJdbcConfig.user=user
# cacheJdbcConfig.password=password
# cacheJdbcConfig.databaseName=databaseName

# apiKeyValue=superSecretKey

# Process Executor instance configurations
# jobsConfigList[0].type=process
# instance name
# jobsConfigList[0].name=process1
# jobsConfigList[0].config.process[0]=/usr/bin/python
# jobsConfigList[0].config.process[1]=hello_world.py
# optional configuration if want to start script in a specific dir
# jobsConfigList[0].homeDir=
# optonal configuration if want to set env variables before starting script
# jobsConfigList[0].envVars=
# capture std out from process - will pass to Grafana unprocessed result - each line converted to new table raw
# jobsConfigList[0].captureOutput=
# pass unique cache name created by scheduler to external process.
# Use this option if the invoked process will handle pushing data to cache. Set to argument name expected by external process. Data cached by the external process will be overwritten if cacheArg and captureOutput is set
# jobsConfigList[0].cacheArg=
# constant arguments passed to executor instance with every request
# jobsConfigList[0].fixedArgs=
# list of process arguments allowed from Grafana
# jobsConfigList[0].argSet=

# Rest Executor instance configurations
# jobsConfigList[1].type=rest
# jobsConfigList[1].name=executor
# jobsConfigList[1].argSet=
# jobsConfigList[1].fixedArgs=
